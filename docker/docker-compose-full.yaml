version: '3.4'
services:
  auth-server:
    container_name: popugjira-auth-app
    build:
      context: ./../authServer
      dockerfile: ../docker/auth/Dockerfile
    user: ${uid}:${gid}
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AUTH_DB_USER: ${AUTH_DB_USER}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
      AUTH_DB_NAME: ${AUTH_DB_NAME}
    ports:
      - 5006:5005
      - 9000:9000
    depends_on:
      - auth-db
      - broker
  traker-app:
    container_name: popugjira-traker-app
    build:
      context: ./../taskTraker
      dockerfile: ../docker/traker/Dockerfile
    user: ${uid}:${gid}
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    ports:
      - 5005:5005
      - 8080:8080
    depends_on:
      - traker-db
      - auth-server
      - broker
  accounting-app:
    container_name: popugjira-accounting-app
    build:
      context: ./../accounting
      dockerfile: ../docker/accounting/Dockerfile
    user: ${uid}:${gid}
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ACCOUNTING_DB_USER: ${ACCOUNTING_DB_USER}
      ACCOUNTING_DB_PASSWORD: ${ACCOUNTING_DB_PASSWORD}
      ACCOUNTING_DB_NAME: ${ACCOUNTING_DB_NAME}
    ports:
      - 5007:5005
      - 8090:8090
    depends_on:
      - accounting-db
      - auth-server
      - broker
  auth-db:
    image: mysql:5.7.33
    container_name: popugjira-auth-mysql
    ports:
      - ${AUTH_DB_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${AUTH_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${AUTH_DB_NAME}
      MYSQL_USER: ${AUTH_DB_USER}
      MYSQL_PASSWORD: ${AUTH_DB_PASSWORD}
    volumes:
      - ./mysqlAuth:/var/lib/mysql
  traker-db:
    image: mysql:5.7.33
    container_name: popugjira-traker-mysql
    ports:
      - ${DB_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql
  accounting-db:
    image: mysql:5.7.33
    container_name: popugjira-accounting-mysql
    ports:
      - ${ACCOUNTING_DB_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${ACCOUNTING_DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${ACCOUNTING_DB_NAME}
      MYSQL_USER: ${ACCOUNTING_DB_USER}
      MYSQL_PASSWORD: ${ACCOUNTING_DB_PASSWORD}
    volumes:
      - ./mysqlAccounting:/var/lib/mysql
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-server:5.4.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --topic auth.biz.user --describe"]
      interval: 30s
      timeout: 10s
      retries: 4